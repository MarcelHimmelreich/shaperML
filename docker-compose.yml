version: '3.5'

services:
 prometheus:
   image: quay.io/prometheus/prometheus:v2.0.0
   restart: always
   volumes:
    - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
   command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
   ports:
    - "9090:9090"
   depends_on:
    - node-exporter

 node-exporter:
  image: prom/node-exporter:latest
  ports:
    - "9100:9100"

 postgres_exporter:
  image: wrouesnel/postgres_exporter
  environment:
    - DATA_SOURCE_NAME="postgresql+psycopg2://postgres:postgres@postgres:5432/postgres"
  ports:
    - "9237:9237"

 nginx-exporter:
  image: nginx/nginx-prometheus-exporter:0.3.0
  command: -nginx.scrape-uri=http://172.18.0.1:80/stub_status
  depends_on:
    - nginx
  ports:
    - "9113:9113"

 nginx:
  build: services/nginx/
  restart: always
  volumes:
    - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
  ports:
    - "80:80"
  deploy:
    mode: replicated
    replicas: 3
  depends_on:
    - shapercore

 grafana:
  image: grafana/grafana
  links:
    - prometheus
    - postgres
    - minio
    - shapercore
  ports:
   - "3000:3000"
  depends_on:
   - prometheus
   - postgres

 superset:
  image: tylerfowler/superset
  restart: unless-stopped
  environment:
    POSTGRES_DB: superset
    POSTGRES_USER: superset
    POSTGRES_PASSWORD: superset
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    MINIO_HOST: minio
    MINIO_PORT: 9009
    # If using production, comment development volume below
    #SUPERSET_ENV: production
    SUPERSET_ENV: development
  ports:
   - "8088:8088"
  depends_on:
   - postgres
   - minio
  volumes:
   # this is needed to communicate with the postgres and redis services
   - ./superset_config.py:/home/superset/superset/superset_config.py
   # this is needed for development, remove with SUPERSET_ENV=production
   - ../../superset:/home/superset/superset

 jupyter:
  image: jupyter/datascience-notebook
  volumes:
   - ./services/jupyter/notebooks:/notebooks
   - ./services/jupyter/data:/data
  links:
   - postgres
   - minio
  ports:
   - "8888:8888"
  command: "start-notebook.sh \
   --NotebookApp.password=${ACCESS_TOKEN}"

 shapercore:
  build: ./shapercore
  image: tiangolo/uvicorn-gunicorn-fastapi:python3.6
  restart: always
  ports:
    - "8080:8080"
  depends_on:
    - postgres
    - minio

 minio:
  image: minio/minio:latest
  restart: always
  volumes:
    - minio_volume:/data
  ports:
    - "9000:9000"
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server /data

 postgres:
  restart: always
  image: postgres:alpine
  volumes:
   - ./services/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
   - postgres:/data
  environment:
   POSTGRES_USER: postgres
   POSTGRES_PASSWORD: postgres
   POSTGRES_DB: postgres
  ports:
   - "5432:5432"

volumes:
  postgres:
  minio_volume:



